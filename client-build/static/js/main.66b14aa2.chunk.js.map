{"version":3,"sources":["UI/ExclamationIcon/ExclamationIcon.js","utils.js","axios.js","UI/Loader/Loader.js","UI/Message/Message.js","HOC/WithLoadingInfo/WithLoadingInfo.js","Components/Controls/Controls.js","UI/AddButton/AddIcon/AddIcon.js","UI/AddButton/AddButton.js","UI/EditButton/EditButton.js","UI/DeleteButton/DeleteButton.js","Components/GenerateFile/GenerateFile.js","Components/TableYear/TableYear.js","App.js","reportWebVitals.js","index.js","Components/TableYear/TableYear.module.css","Components/Controls/Controls.module.css","UI/AddButton/AddButton.module.css","UI/EditButton/EditButton.module.css","UI/DeleteButton/DeleteButton.module.css"],"names":["ExclamationIcon","xmlns","width","height","fill","className","viewBox","d","determineYearWithDate","fy","date","yearIndex","Number","split","monthAndDay","val","breakdown","shift","join","dbDateToFullDate","year","dbDate","month","yearArr","dayWithMonthNameHandler","MONTHS","Object","freeze","console","log","instance","axios","create","headers","baseURL","timeout","cancelToken","CancelToken","source","token","Loader","props","show","Modal","backdrop","dialogClassName","ModalBody","React","memo","Message","msg","success","setMsg","closeHandler","useCallback","useEffect","timer","setTimeout","clearTimeout","Alert","variant","WithLoadingInfo","WrappedComponent","useState","showLoader","setShowLoader","setSuccess","Controls","narrationValidationFail","setNarrationValidationFail","amountValidationFail","setAmountValidationFail","START_YEAR","END_YEAR","Date","getFullYear","yearRange","Array","map","_","idx","convertToFy","reverse","setYear","toISOString","setDate","noDate","setNoDate","name","setName","direction","setDirection","amount","setAmount","description","setNarration","blink","setBlink","didMount","useRef","users","searchStr","setSearchStr","setFormData","setTableParametersHandler","formData","toLowerCase","current","clickHandler","event","id","target","setShow","changeHandler","value","determineFy","checked","min","max","Container","fluid","Row","styles","rowHeight","Col","lg","ListGroup","Item","style","postion","type","onChange","toString","colHeight","includes","action","onClick","active","yr","index","Button","size","button","onHide","modal","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","Check","label","disabled","defaultValue","toUpperCase","placeholder","validationFail","as","Footer","trim","post","then","res","catch","err","AddIcon","AddButton","newNarration","newAmount","newDirection","newDate","newNoDate","hidePopoverHandler","document","body","click","addHandler","preventDefault","newFormData","data","updateTableHandler","finally","popover","Popover","onSubmit","buttonGrp","buttonCancel","OverlayTrigger","trigger","rootClose","transition","placement","onToggle","overlay","clickable","EditButton","updated","setUpdated","updateHandler","toUpdate","DeleteButton","del","GenerateFile","creditData","debitData","extension","textCurationHandler","downloadCsvHandler","csvString","i","length","blob","Blob","url","window","URL","createObjectURL","a","createElement","setAttribute","appendChild","removeChild","downloadPdfHandler","dataBody","push","doc","jsPDF","text","autoTable","head","theme","headStyles","fontStyle","fontSize","fillColor","columnStyles","cellWidth","save","TableYear","setData","creditFileData","setCreditFileData","debitFileData","setDebitFileData","creditTableRow","setCreditTableRow","debitTableRow","setDebitTableRow","creditSum","setCreditSum","debitSum","setDebitSum","noData","setNoData","setDeletedYear","refContainer","op","item","temp","filter","element","dataAll","findIndex","get","params","isArray","entries","message","inFileData","outFileData","j","actions","ref","noDataStyles","Table","striped","bordered","hover","tableWidth","colSpan","setDataAll","deletedYear","isMounted","arrangedData","sort","b","getAllDataHandler","newData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.66b14aa2.chunk.js","sourcesContent":["export const ExclamationIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#ff0000\" className=\"bi bi-exclamation-circle\" viewBox=\"0 0 16 16\">\r\n<path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n<path d=\"M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z\"/>\r\n</svg>","export const convertToFy = (year) =>{\r\n    return `${year}-${Number(year+1)}` ;\r\n}\r\nexport const convertFromFy = (fy) =>{\r\n    return fy.split('-')[0];\r\n}\r\n\r\nexport const determineFy = (date) =>{\r\n    let breakdown = date.split('-');\r\n    let year = Number(breakdown[0]);\r\n    let month = Number(breakdown[1]);\r\n    if(month < 4){\r\n        console.log(\"determineFy: \", `${year - 1}-${year}`);\r\n        return `${year - 1}-${year}`; \r\n    }\r\n    console.log(\"determineFy: \", `${year}-${year + 1}`);\r\n    return `${year}-${year + 1}`;\r\n}\r\n\r\nexport const determineYearWithDate = (fy, date) =>{\r\n    let month = Number(date.split('-')[1]);\r\n    let yearIndex = 0;\r\n    if(month < 4){\r\n        yearIndex = 1;\r\n    }\r\n    return `${fy.split('-')[yearIndex]}-${monthAndDay(date)}`;\r\n}\r\n\r\nexport const monthAndDay = (date, val = 1) => {\r\n    let breakdown = date.split('-')\r\n    breakdown.shift();\r\n    if(val === -1){\r\n        return [breakdown[1], breakdown[0]].join('-');\r\n    }\r\n    return breakdown.join('-');\r\n}\r\n\r\nexport const dbDateToFullDate = (year, dbDate) =>{\r\n    let breakdown = dbDate.split('-');\r\n    let month = Number(breakdown[1]);\r\n    let yearArr = year.split('-');\r\n    return `${ month < 4 ? yearArr[1] : yearArr[0] }-${[breakdown[1], breakdown[0]].join('-')}`;\r\n}\r\n\r\nexport const dayWithMonthNameHandler = (dbDate) =>{\r\n    const MONTHS = {\r\n        \"01\": \"Jan\",\r\n        \"02\": \"Feb\",\r\n        \"03\": \"Mar\",\r\n        \"04\": \"Apr\",\r\n        \"05\": \"May\",\r\n        \"06\": \"Jun\",\r\n        \"07\": \"Jul\",\r\n        \"08\": \"Aug\",\r\n        \"09\": \"Sep\",\r\n        \"10\": \"Oct\",\r\n        \"11\": \"Nov\",\r\n        \"12\": \"Dec\"\r\n    };\r\n    Object.freeze(MONTHS);\r\n    console.log(\"test dbdate split: \", dbDate);\r\n    let breakdown = dbDate.split(\"-\")\r\n    console.log(\"test utils: \", dbDate, breakdown);\r\n    return `${breakdown[0]}-${MONTHS[breakdown[1]]}`;\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        baseURL: \"http://localhost:5000\",\r\n        timeout: 60000,\r\n        cancelToken: axios.CancelToken.source().token\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport  './Loader.css';\r\nimport { Modal, ModalBody } from 'react-bootstrap';\r\n\r\nconst Loader = (props) => {\r\n\r\n    console.log(\"show loader\", props.show)\r\n\r\n    return( \r\n    <Modal show={props.show}\r\n           backdrop=\"static\"\r\n           dialogClassName=\"borderStyle\" > \r\n           <ModalBody className=\"spinner\"> </ModalBody>\r\n    </Modal> \r\n\r\n    );\r\n}\r\n\r\nexport default React.memo(Loader);","import React, { useCallback, useEffect } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    const { msg, success, setMsg } = props;\r\n\r\n    const closeHandler = useCallback(() =>{\r\n        setMsg(\"\");\r\n    },[setMsg]);\r\n\r\n    useEffect(() => {\r\n            let timer = setTimeout(() => {\r\n                closeHandler();\r\n                clearTimeout(timer);\r\n            }, 5000);\r\n\r\n            return function cleanup(){\r\n                clearTimeout(timer);\r\n            }\r\n\r\n    }, [msg, closeHandler]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"message.js: \", msg, success, props);\r\n    })\r\n\r\n    return( msg ?\r\n        <div className=\"alertBox\" >\r\n            <Alert variant={ success ? \"success\" : \"danger\" }   >\r\n                { msg }\r\n            </Alert> \r\n        </div> : null\r\n         \r\n    );\r\n}\r\n\r\nexport default React.memo(Message);","import React, { useState } from 'react';\r\nimport Loader from '../../UI/Loader/Loader';\r\nimport Message from '../../UI/Message/Message';\r\n\r\nconst WithLoadingInfo = (WrappedComponent)  =>  {\r\n    const HOC = (props) => {\r\n        const [ showLoader, setShowLoader ] = useState(false);\r\n        const [ msg, setMsg ] = useState(\"\");\r\n        const [ success, setSuccess ] = useState(true);\r\n\r\n        return(<> \r\n            <Loader show={showLoader} /> \r\n\r\n            <Message msg={msg}\r\n                    setMsg={setMsg}\r\n                    success={success} />\r\n\r\n            <WrappedComponent \r\n                            {...props} \r\n                            showLoader={showLoader} \r\n                            setShowLoader={setShowLoader}\r\n                            msg={msg}\r\n                            setMsg={setMsg}\r\n                            success={success}\r\n                            setSuccess={setSuccess} />\r\n        </>);\r\n    };\r\n    return HOC ;\r\n};\r\n\r\nexport default WithLoadingInfo;","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport styles from './Controls.module.css';\r\nimport { ExclamationIcon } from '../../UI/ExclamationIcon/ExclamationIcon';\r\nimport { convertToFy, determineFy, determineYearWithDate, monthAndDay } from '../../utils';\r\n\r\nimport { \r\n    Container, \r\n    Row, \r\n    Col,\r\n    ListGroup, \r\n    Button, \r\n    Modal, \r\n    Form \r\n} from 'react-bootstrap';\r\nimport axios from '../../axios';\r\nimport WithLoadingInfo from '../../HOC/WithLoadingInfo/WithLoadingInfo';\r\n\r\nconst Controls = (props) => {\r\n\r\n    const { setShowLoader, setMsg, setSuccess } = props;\r\n\r\n    const [ narrationValidationFail, setNarrationValidationFail ] = useState(false);\r\n    const [ amountValidationFail, setAmountValidationFail ] = useState(false);\r\n\r\n    const START_YEAR = 2015;\r\n    const END_YEAR = new Date().getFullYear();\r\n\r\n    let yearRange = Array(END_YEAR - START_YEAR + 1).fill().map((_, idx) => convertToFy(START_YEAR + idx) ).reverse(); // generates an array of consecutive integers from START_YEAR to END_YEAR .\r\n\r\n    const [ year, setYear ] = useState(`${END_YEAR}-${END_YEAR + 1}`);\r\n    const [ date, setDate ] = useState(new Date().toISOString().split('T')[0]);\r\n    const [ noDate, setNoDate ] = useState(false);\r\n    const [ name, setName ] = useState(\"narayan\");\r\n    const [ direction, setDirection ] = useState(\"credit\");\r\n    const [ amount, setAmount ] = useState(0);\r\n    const [ description, setNarration ] = useState('');  \r\n\r\n    const [ blink , setBlink ] = useState(false);\r\n\r\n    const didMount = useRef(false);\r\n\r\n    const users = ['narayan', 'savita', 'sakshi', 'arpan'];\r\n\r\n    const [ searchStr, setSearchStr ] = useState('');\r\n\r\n    const { setFormData } = props;\r\n\r\n    const searchHandler = (event) =>{\r\n        setSearchStr(event.target.value.toString().toLowerCase());\r\n    }\r\n\r\n    const setTableParametersHandler = useCallback( () =>{\r\n        let formData = {\r\n            name: name.toLowerCase(),\r\n            year: year\r\n        }\r\n        setFormData(formData);\r\n        setBlink(false);\r\n    }, [ name, year, setFormData ] );\r\n\r\n    useEffect(() => {\r\n        if(!didMount.current){\r\n            didMount.current = true;\r\n            setTableParametersHandler();\r\n        }\r\n    }, [setTableParametersHandler])\r\n\r\n    const clickHandler = (event, id) => {\r\n        switch(id){\r\n            case \"year\":\r\n                setYear(event.target.id);\r\n                setDate(determineYearWithDate(event.target.id, date));\r\n                break;\r\n\r\n            case \"name\":\r\n                setName(event.target.id);\r\n                break;\r\n\r\n            case \"direction\":\r\n                setDirection(event.target.id);\r\n                break;\r\n\r\n            default:\r\n                return null;\r\n        }\r\n\r\n        setBlink(true);\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const closeHandler = () => setShow(false);\r\n    const showHandler = () => {\r\n        setAmount(0);\r\n        setNarration(\"\");\r\n        setNoDate(true);\r\n        if(narrationValidationFail){\r\n            setNarrationValidationFail(false);\r\n        }\r\n        if(amountValidationFail){\r\n            setAmountValidationFail(false);\r\n        }\r\n\r\n        if(year === \"all\"){\r\n            setYear(`${END_YEAR}-${END_YEAR + 1}`);\r\n            setDate(new Date().toISOString().split('T')[0]);\r\n        }\r\n\r\n        setShow(true);\r\n    }\r\n\r\n    const changeHandler = (event) => {\r\n\r\n        switch(event.target.id){\r\n\r\n            case \"formBasicDate\":\r\n                setDate(event.target.value);\r\n                setYear(determineFy(event.target.value));\r\n                console.log('selected date: ', event.target.value);\r\n                break;\r\n\r\n            case \"formBasicNoDate\":\r\n                setNoDate(event.target.checked)\r\n                break;\r\n\r\n            case \"formBasicName\":\r\n                setName(event.target.value);\r\n                break;\r\n\r\n            case \"formBasicAmount\":\r\n                let val = event.target.value;\r\n                setAmount(val);\r\n                break;\r\n\r\n            case \"formBasicNarration\":\r\n                setNarration(event.target.value);\r\n                break;\r\n\r\n            default:\r\n                setDirection(event.target.id);\r\n        }\r\n    }\r\n\r\n    const validationHandler = () =>{\r\n            if(users.includes(name) && Number(amount) > 0 && description.trim() !== \"\"){\r\n                if(amountValidationFail){\r\n                    setAmountValidationFail(false);\r\n                }\r\n                if(narrationValidationFail){\r\n                    setNarrationValidationFail(false);\r\n                }\r\n                return true;\r\n            }\r\n            if(Number(amount) <= 0 ){\r\n                setAmountValidationFail(true);\r\n            }\r\n            else if(amountValidationFail){\r\n                setAmountValidationFail(false);\r\n            }\r\n            if(description.trim() === \"\"){\r\n                setNarrationValidationFail(true);\r\n            }\r\n            else if(narrationValidationFail){\r\n                setNarrationValidationFail(false);\r\n            }\r\n            return false;\r\n    }\r\n\r\n    const submitHandler = () =>{\r\n\r\n        if(!validationHandler()){\r\n            console.log(\"validation failed\");\r\n            return;\r\n        }\r\n\r\n        const formData = {\r\n                name: name.toLowerCase(),\r\n                year: year,\r\n                date: monthAndDay(date, -1),\r\n                noDate: noDate,\r\n                amount: Number(amount),\r\n                direction: direction,\r\n                description: description\r\n            }\r\n\r\n            console.log(\"formData in controls = \", formData);\r\n        \r\n        setShowLoader(true);\r\n        axios.post('/api/items', formData)\r\n             .then((res => {\r\n                setShowLoader(false);\r\n                console.log(\"control post successful: \", res);\r\n                setTableParametersHandler();\r\n                closeHandler();\r\n                setBlink(false);\r\n                setMsg(\"Entry added successfully ! Fetching updated table...\");\r\n                setSuccess(true);\r\n             }))\r\n             .catch(err => {\r\n                 setShowLoader(false);\r\n                setMsg(\"Entry could not be added. Please check your network connection\");\r\n                setSuccess(false);\r\n                 console.log('error is: ', err);\r\n             })\r\n    }\r\n\r\n    let min = `${START_YEAR}-04-01`;\r\n    let max = `${END_YEAR + 1}-03-31`;\r\n\r\n    return(\r\n        <Container fluid=\"lg\" className=\"p-5 bg-light\" >\r\n            <Row className={styles.rowHeight} >\r\n                <Col lg={4} >\r\n                    <ListGroup  >\r\n                        <ListGroup.Item style={{postion: \"fixed\"}}  ><input type=\"text\" onChange={searchHandler} value={searchStr} ></input></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup className={styles.colHeight} >\r\n                        { \"all\".toString().includes(searchStr) ?\r\n                        <ListGroup.Item key=\"all\" id=\"all\" action onClick={(event)=>clickHandler(event, \"year\")} variant=\"light\" active={ year === \"all\" } >ALL  </ListGroup.Item>\r\n                        : null }\r\n                        {yearRange.map((yr, index)=>{\r\n                            if(yr.toString().includes(searchStr)){\r\n                                return <ListGroup.Item key={index} id={yr} action onClick={(event)=>clickHandler(event, \"year\")} variant=\"light\" active={ year === yr.toString() } >{ yr }</ListGroup.Item>;\r\n                            }\r\n                            return null;\r\n                        })} \r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col lg={4}>\r\n                    <ListGroup >\r\n                        <ListGroup.Item id='narayan' action variant=\"light\" onClick={(event)=>clickHandler(event, \"name\")}  active={ name === 'narayan' } > Naryan</ListGroup.Item>\r\n                        <ListGroup.Item id='savita' action variant=\"light\" onClick={(event)=>clickHandler(event, \"name\")} active={ name === 'savita' } >Savita</ListGroup.Item>\r\n                        <ListGroup.Item id='arpan' action variant=\"light\" onClick={(event)=>clickHandler(event, \"name\")} active={ name === 'arpan' } >Arpan</ListGroup.Item>\r\n                        <ListGroup.Item id='sakshi' action variant=\"light\" onClick={(event)=>clickHandler(event, \"name\")} active={ name === 'sakshi' } >Sakshi</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col lg={4}>\r\n                    <ListGroup >\r\n                        <ListGroup.Item id=\"credit\" action variant=\"light\" onClick={(event)=>clickHandler(event, \"direction\")}  active={ direction === 'credit' } >Credit</ListGroup.Item>\r\n                        <ListGroup.Item id=\"debit\" action variant=\"light\" onClick={(event)=>clickHandler(event, \"direction\")}  active={ direction === 'debit' } >Debit</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Button variant=\"outline-secondary\" size='lg' onClick={setTableParametersHandler} className={[styles.button, ( blink ? styles.blink : \"\")].join(\" \")} >Get Data</Button>\r\n                {/* <Button variant=\"outline-secondary\" size='lg' onClick={showHandler} disabled={ year === \"all\" } className={[styles.button, (year === \"all\" ? styles.notAllowed : \"\")].join(\" \")} >Enter New Data</Button>  */}\r\n                <Button variant=\"outline-secondary\" size='lg' onClick={showHandler} className={styles.button} >Enter New Data</Button> \r\n            </Row>\r\n\r\n\r\n\r\n                <Modal show={show} onHide={closeHandler} className={styles.modal}  >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>New Data Form</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicDate\"> \r\n                                <Form.Label>Date</Form.Label>\r\n                                <Form.Control name=\"date\" type=\"date\" value={date} onChange={changeHandler} min={min} max={max} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicNoDate\"> \r\n                                <Form.Check name=\"noDate\" label=\"No Date\" type=\"checkbox\" checked={noDate} onChange={changeHandler}  />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicYear\"> \r\n                                <Form.Label>Year</Form.Label>\r\n                                <Form.Control name=\"year\" type=\"text\" value={year} disabled />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control name=\"name\" type=\"text\" defaultValue={name.toUpperCase()} disabled  />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"credit\" >\r\n                                <Form.Label>Type</Form.Label>\r\n                                <Form.Check name=\"direction\" type=\"radio\" label=\"Credit\" checked={direction === \"credit\"} onChange={changeHandler} />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"debit\" >\r\n                                <Form.Check name=\"direction\" type=\"radio\" label=\"Debit\" checked={direction === \"debit\"} onChange={changeHandler} />\r\n                            </Form.Group>  \r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicAmount\">\r\n                                <Form.Label>Amount</Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"Enter amount\" onChange={changeHandler} value={Number(amount)} />\r\n                                { amountValidationFail ? <div className={styles.validationFail} ><span> { ExclamationIcon } </span><span> Amount must be greater than zero </span> </div> : null }\r\n                            </Form.Group> \r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicNarration\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" placeholder=\"Enter description\" onChange={changeHandler} value={description} />\r\n                                { narrationValidationFail ? <div className={styles.validationFail} ><span> { ExclamationIcon } </span><span>Description must contain some descriptive text</span></div> : null }\r\n                            </Form.Group> \r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"danger\" onClick={closeHandler}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={submitHandler}>\r\n                            Save\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default WithLoadingInfo(React.memo(Controls));","// export const AddIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\"  fill=\"#197e19\" className=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\">\r\n// <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n// <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n// </svg>\r\n\r\nexport const AddIcon = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"#197e19\" className=\"bi bi-plus-circle-fill\" viewBox=\"0 0 16 16\">\r\n<path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\r\n</svg>\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './AddButton.module.css';\r\nimport axios from '../../axios';\r\nimport { ExclamationIcon } from '../ExclamationIcon/ExclamationIcon';\r\nimport { AddIcon } from './AddIcon/AddIcon';\r\nimport {   \r\n        Form,\r\n        Button,\r\n        Popover,\r\n        OverlayTrigger\r\n    } from 'react-bootstrap';\r\nimport { determineYearWithDate, monthAndDay } from '../../utils';\r\n\r\nconst AddButton = ( props ) => {\r\n    \r\n    const { name, year, direction } = props.formData;  \r\n\r\n    const [ newNarration, setNarration ] = useState();\r\n    const [ newAmount, setAmount ] = useState(0);\r\n    const [ newDirection, setDirection ] = useState();\r\n    const [ newDate, setDate ] = useState();\r\n    const [ newNoDate, setNoDate] = useState(true);\r\n\r\n    const [ narrationValidationFail, setNarrationValidationFail ] = useState(false);\r\n    const [ amountValidationFail, setAmountValidationFail ] = useState(false);\r\n\r\n    const hidePopoverHandler = () =>{\r\n        document.body.click();\r\n    }\r\n\r\n    const { showLoader, setShowLoader, success, setMsg, setSuccess } = props; \r\n\r\n    const min = `${year.split('-')[0]}-04-01`;\r\n    const max = `${year.split('-')[1]}-03-31`;\r\n\r\n    useEffect(() => {\r\n        if(!showLoader && success ){\r\n            hidePopoverHandler();\r\n        }\r\n    }, [showLoader, success] )\r\n\r\n    const resetHandler = () => {\r\n        setAmount(0);\r\n        setNarration(\"\");\r\n        setDirection(direction);\r\n        setNoDate(true);\r\n        setDate(determineYearWithDate(year, new Date().toISOString().split('T')[0]));\r\n\r\n        if(narrationValidationFail){\r\n            setNarrationValidationFail(false);\r\n        }\r\n        if(amountValidationFail){\r\n            setAmountValidationFail(false);\r\n        }\r\n    }\r\n\r\n    function validationHandler(){\r\n        console.log(\"validationhandler hit\");\r\n        if(newAmount > 0 && newNarration.trim() !== \"\"){\r\n            console.log(\"validation successful\");\r\n            if(amountValidationFail){\r\n                setAmountValidationFail(false);\r\n            }\r\n            if(narrationValidationFail){\r\n                setNarrationValidationFail(false);\r\n            }\r\n            return true;\r\n        }\r\n        if(Number(newAmount) <= 0 ){\r\n            console.log(\"amount validation fail\");\r\n            setAmountValidationFail(true);\r\n        }\r\n        else if(amountValidationFail){\r\n            setAmountValidationFail(false);\r\n        }\r\n        if(newNarration.trim() === \"\"){\r\n            console.log(\"description error hit\")\r\n            setNarrationValidationFail(true);\r\n        }\r\n        else if(narrationValidationFail){\r\n            setNarrationValidationFail(false);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const addHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if(!validationHandler()){\r\n            return;\r\n        }\r\n\r\n        let newFormData = {\r\n                name: name,\r\n                year: year,\r\n                date: monthAndDay(newDate, -1),\r\n                noDate: newNoDate,\r\n                description: newNarration,\r\n                amount: newAmount,\r\n                direction: newDirection,\r\n            }\r\n\r\n        setShowLoader(true);\r\n        \r\n        axios.post('/api/items', newFormData )\r\n             .then((res) =>{\r\n                console.log(\"item added: \", res); \r\n                setMsg(\"Entry added successfully !\");\r\n                setSuccess(true);\r\n                newFormData[\"id\"]= res.data.id;\r\n                props.updateTableHandler('_', 'add', newFormData);\r\n            })\r\n             .catch(err => {\r\n                setMsg(\"Entry could not be added. Please check your network connection\")\r\n                setSuccess(false);\r\n                console.log(err);\r\n             })\r\n             .finally(() =>{\r\n                // props.setShowLoader(false);\r\n                setShowLoader(false);\r\n              });\r\n    }\r\n\r\n    const changeHandler = (event) => {\r\n\r\n        switch(event.target.id){\r\n\r\n            case \"formBasicDate\":\r\n                setDate(event.target.value);\r\n                break;\r\n\r\n            case \"formBasicNoDate\":\r\n                setNoDate(event.target.checked)\r\n                break;\r\n\r\n            case \"formBasicAmount\":\r\n                let val = Number(event.target.value);\r\n                console.log(\"amount is: \", val);\r\n                setAmount(val);\r\n                break;\r\n\r\n            case \"formBasicNarration\":\r\n                setNarration(event.target.value);\r\n                break;\r\n\r\n            default:\r\n                setDirection(event.target.id);\r\n        }\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\" className={styles.popover}>\r\n          <Popover.Header as=\"h3\">New Data Form</Popover.Header>\r\n          <Popover.Body>\r\n           <Form onSubmit={addHandler} >\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicDate\"> \r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control name=\"date\" type=\"date\" value={newDate} onChange={changeHandler} min={min} max={max} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicNoDate\"> \r\n                    <Form.Check name=\"noDate\" label=\"No Date\" type=\"checkbox\" checked={newNoDate} onChange={changeHandler}  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"credit\" >\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Form.Check name=\"direction\" type=\"radio\" label=\"Credit\" checked={newDirection === \"credit\"} onChange={changeHandler} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"debit\" >\r\n                    <Form.Check name=\"direction\" type=\"radio\" label=\"Debit\" checked={newDirection === \"debit\"} onChange={changeHandler} />\r\n                </Form.Group>  \r\n\r\n                <Form.Group className=\"mb-4\" controlId=\"formBasicAmount\">\r\n                    <Form.Label>Amount</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder=\"Enter amount\" onChange={changeHandler} value={Number(newAmount)} />\r\n                    { amountValidationFail ? <div className={styles.validationFail} ><span> { ExclamationIcon } </span><span> Amount must be greater than zero </span> </div> : null }\r\n                </Form.Group> \r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicNarration\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" placeholder=\"Enter description\" onChange={changeHandler} value={newNarration} />\r\n                    { narrationValidationFail ? <div className={styles.validationFail} ><span> { ExclamationIcon } </span><span>Description must contain some descriptive text</span></div> : null }\r\n                </Form.Group> \r\n                <Button type=\"submit\" className={styles.buttonGrp}  variant='success' onClick={addHandler} >Confirm</Button>\r\n                <Button className={ [ styles.buttonGrp, styles.buttonCancel ].join(\" \") } onClick={hidePopoverHandler} variant='danger' >Cancel</Button>\r\n            </Form>\r\n          </Popover.Body>\r\n        </Popover>\r\n      );\r\n\r\n    return(\r\n        <OverlayTrigger\r\n            trigger=\"click\"\r\n            rootClose={!showLoader} \r\n            transition \r\n            placement=\"right\" \r\n            onToggle={resetHandler}\r\n            overlay={popover} >\r\n\r\n            <span className={styles.clickable} >{ AddIcon }</span>\r\n\r\n        </OverlayTrigger>\r\n    );\r\n\r\n      \r\n   \r\n}\r\n\r\nexport default AddButton;","import React, { useEffect, useState } from 'react';\r\nimport styles from './EditButton.module.css';\r\nimport axios from '../../axios';\r\nimport { ExclamationIcon } from '../ExclamationIcon/ExclamationIcon';\r\nimport {   \r\n        Form,\r\n        Button,\r\n        Popover,\r\n        OverlayTrigger\r\n    } from 'react-bootstrap';\r\nimport { monthAndDay, dbDateToFullDate } from '../../utils';\r\n\r\nconst EditButton = ( props ) => {\r\n    \r\n    const { name, year, date, noDate, amount, description, direction } = props.formData;  \r\n\r\n    const [ newNarration, setNarration ] = useState();\r\n    const [ newAmount, setAmount ] = useState();\r\n    const [ newDirection, setDirection ] = useState();\r\n    const [ newDate, setDate ] = useState();\r\n    const [ newNoDate, setNoDate ] = useState();\r\n\r\n    const [ narrationValidationFail, setNarrationValidationFail ] = useState(false);\r\n    const [ amountValidationFail, setAmountValidationFail ] = useState(false);\r\n\r\n    const [ updated, setUpdated ] = useState(false);\r\n\r\n    const hidePopoverHandler = () =>{\r\n        document.body.click();\r\n    }\r\n\r\n    const { showLoader, setShowLoader, success, setMsg, setSuccess } = props; \r\n\r\n    useEffect(() => {\r\n        if(!showLoader && success ){\r\n            hidePopoverHandler();\r\n        }\r\n    }, [showLoader, success] )\r\n\r\n    const resetHandler = () => {\r\n        if(updated){\r\n            setUpdated(false);\r\n            return;\r\n        }\r\n        console.log(\"datefull: \", dbDateToFullDate(year, date))\r\n        setDate(dbDateToFullDate(year, date));\r\n        setNoDate(noDate);\r\n        setAmount(amount);\r\n        setNarration(description);\r\n        setDirection(direction);\r\n\r\n        if(narrationValidationFail){\r\n            setNarrationValidationFail(false);\r\n        }\r\n        if(amountValidationFail){\r\n            setAmountValidationFail(false);\r\n        }\r\n    }\r\n\r\n    function validationHandler(){\r\n        console.log(\"validationhandler hit\");\r\n        if(newAmount > 0 && newNarration.trim() !== \"\"){\r\n            console.log(\"validation successful\");\r\n            if(amountValidationFail){\r\n                setAmountValidationFail(false);\r\n            }\r\n            if(narrationValidationFail){\r\n                setNarrationValidationFail(false);\r\n            }\r\n            return true;\r\n        }\r\n        if(Number(newAmount) <= 0 ){\r\n            console.log(\"amount validation fail\");\r\n            setAmountValidationFail(true);\r\n        }\r\n        else if(amountValidationFail){\r\n            setAmountValidationFail(false);\r\n        }\r\n        if(newNarration.trim() === \"\"){\r\n            console.log(\"description error hit\")\r\n            setNarrationValidationFail(true);\r\n        }\r\n        else if(narrationValidationFail){\r\n            setNarrationValidationFail(false);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const updateHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if(!validationHandler()){\r\n            return;\r\n        }\r\n\r\n        let newFormData = {\r\n                id: props.toUpdate,\r\n                name: name,\r\n                year: year,\r\n                date: monthAndDay(newDate, -1),\r\n                noDate: newNoDate,\r\n                description: newNarration,\r\n                amount: newAmount,\r\n                direction: newDirection,\r\n            }\r\n\r\n        // props.setShowLoader(true);\r\n        setShowLoader(true);\r\n        \r\n        axios.post(`/api/items/${props.toUpdate}`, newFormData )\r\n             .then((res) =>{\r\n                console.log(res); \r\n                setMsg(\"Updation successful !\");\r\n                setSuccess(true);\r\n                setUpdated(true);\r\n                props.updateTableHandler( props.toUpdate, 'edit', newFormData);\r\n            })\r\n             .catch(err => {\r\n                setMsg(\"Updation failed. Please check your network connection\");\r\n                setSuccess(false);\r\n                console.log(err);\r\n             })\r\n             .finally(() =>{\r\n                // props.setShowLoader(false);\r\n                setShowLoader(false);\r\n              });\r\n    }\r\n\r\n    const changeHandler = (event) => {\r\n\r\n        switch(event.target.id){\r\n\r\n            case \"formBasicDate\":\r\n                setDate(event.target.value);\r\n                break;\r\n\r\n            case \"formBasicNoDate\":\r\n                setNoDate(event.target.checked)\r\n                break;\r\n\r\n            case \"formBasicAmount\":\r\n                let val = event.target.value.toString();\r\n                setAmount(val);\r\n                break;\r\n\r\n            case \"formBasicNarration\":\r\n                setNarration(event.target.value);\r\n                break;\r\n\r\n            default:\r\n                setDirection(event.target.id);\r\n        }\r\n    }\r\n\r\n    const min = `${year.split('-')[0]}-04-01`;\r\n    const max = `${year.split('-')[1]}-03-31`;\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\" className={styles.popover}>\r\n          <Popover.Header as=\"h3\">Edit form</Popover.Header>\r\n          <Popover.Body>\r\n           <Form onSubmit={updateHandler} >\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicDate\"> \r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control name=\"date\" type=\"date\" value={newDate} onChange={changeHandler} min={min} max={max} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicNoDate\"> \r\n                    <Form.Check name=\"noDate\" label=\"No Date\" type=\"checkbox\" checked={newNoDate} onChange={changeHandler}  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"credit\" >\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Form.Check name=\"direction\" type=\"radio\" label=\"Credit\" checked={newDirection === \"credit\"} onChange={changeHandler} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"debit\" >\r\n                    <Form.Check name=\"direction\" type=\"radio\" label=\"Debit\" checked={newDirection === \"debit\"} onChange={changeHandler} />\r\n                </Form.Group>  \r\n\r\n                <Form.Group className=\"mb-4\" controlId=\"formBasicAmount\">\r\n                    <Form.Label>Amount</Form.Label>\r\n                    <Form.Control type=\"number\" placeholder=\"Enter amount\" onChange={changeHandler} value={Number(newAmount)} />\r\n                    { amountValidationFail ? <div className={styles.validationFail} ><span> { ExclamationIcon } </span><span> Amount must be greater than zero </span> </div> : null }\r\n                </Form.Group> \r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicNarration\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" placeholder=\"Enter description\" onChange={changeHandler} value={newNarration} />\r\n                    { narrationValidationFail ? <div className={styles.validationFail} ><span> { ExclamationIcon } </span><span>Description must contain some descriptive text</span></div> : null }\r\n                </Form.Group> \r\n                <Button type=\"submit\" className={styles.buttonGrp}  variant='success' onClick={updateHandler} >Update</Button>\r\n                <Button className={ [ styles.buttonGrp, styles.buttonCancel ].join(\" \") } onClick={hidePopoverHandler} variant='danger' >Cancel</Button>\r\n            </Form>\r\n          </Popover.Body>\r\n        </Popover>\r\n      );\r\n\r\n    return(\r\n        <OverlayTrigger\r\n            trigger=\"click\"\r\n            rootClose={!showLoader} \r\n            transition \r\n            placement=\"right\" \r\n            onToggle={resetHandler}\r\n            overlay={popover} >\r\n\r\n            <Button className={styles.button} variant='primary' >Edit</Button>\r\n\r\n        </OverlayTrigger>\r\n    );\r\n\r\n      \r\n   \r\n}\r\n\r\nexport default EditButton;","import React from 'react';\r\nimport styles from './DeleteButton.module.css';\r\nimport axios from '../../axios';\r\nimport {   \r\n         Button,\r\n         Popover,\r\n         OverlayTrigger\r\n        } from 'react-bootstrap';\r\n\r\nconst DeleteButton = ( props ) => {\r\n\r\n    const hidePopoverHandler = () =>{\r\n        document.body.click();\r\n    }\r\n\r\n    // const [ showLoader, setShowLoader ] = useState(false); // only declared to capture loader state for rootclose\r\n    const { showLoader, setShowLoader } = props;\r\n    const deleteHandler = () => {\r\n        // props.setShowLoader(true);\r\n        setShowLoader(true);\r\n        axios.post(`/api/items/${props.toUpdate}`, { ...props.formData , del: true })\r\n             .then((res) =>{\r\n                console.log(res); \r\n                // setMsg(\"Deletion successful !\");\r\n                // setSuccess(true);\r\n                hidePopoverHandler();\r\n                props.updateTableHandler(props.toUpdate, 'del');\r\n            })\r\n             .catch(err => {\r\n              // setMsg(\"Deletion failed. Please check your network connection\")\r\n              // setSuccess(false);\r\n              console.log(err);\r\n             })\r\n             .finally(() =>{\r\n                // props.setShowLoader(false);\r\n                setShowLoader(false);\r\n              });\r\n    }\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\" className={styles.popover} >\r\n          <Popover.Header as=\"h3\">Confirm Deletion</Popover.Header>\r\n          <Popover.Body>\r\n            <p>Please confirm that you want to delete this entry: </p>\r\n            <Button  variant='success' onClick={deleteHandler} >Confirm</Button>\r\n            <Button className={ styles.buttonCancel } onClick={hidePopoverHandler} variant='danger' >Cancel</Button>\r\n          </Popover.Body>\r\n        </Popover>\r\n      );\r\n\r\n    return(\r\n        <OverlayTrigger\r\n          trigger=\"click\"\r\n          rootClose={!showLoader} \r\n          transition placement=\"right\" \r\n          overlay={popover} >\r\n            <Button className={styles.button} variant='danger' >Delete</Button>\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\nimport styles from './GenerateFile.module.css';\r\nimport xlsx from 'json-as-xlsx';\r\n// import html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport {  Button } from 'react-bootstrap';\r\nimport { dayWithMonthNameHandler } from '../../utils';\r\n\r\nconst GenerateFile = (props) => {\r\n\r\n    const { name, year, creditData, debitData, extension } = props;\r\n\r\n    const textCurationHandler = (val) =>{\r\n        return `\"${val}\"`;\r\n    }\r\n\r\n    const downloadFileHandler = () =>{\r\n        if(extension === 'csv'){\r\n            downloadCsvHandler();\r\n        }\r\n        else if(extension === 'pdf'){\r\n            downloadPdfHandler();\r\n        }\r\n    }\r\n\r\n\r\n    const downloadCsvHandler = () =>{\r\n        const headers = `,,,,${name.toUpperCase()} ${year},,,,\\nCredit,,,,, Debit,,  \\n S.No., Date, Description, Amount,, S.No., Date, Description, Amount\\n`;\r\n        console.log(creditData);\r\n        let csvString = headers;\r\n        let creditItem = \"\";\r\n        let debitItem = \"\";\r\n        for(let i = 0; i < (creditData.length >= debitData.length ? creditData.length : debitData.length); i++){\r\n            if(creditData[i]){\r\n                creditItem = `${i + 1}, ${dayWithMonthNameHandler(creditData[i].date)},${textCurationHandler(creditData[i].description)},${creditData[i].amount},,`\r\n            }\r\n            else{\r\n                creditItem = `,,,,,`\r\n            }\r\n\r\n            if(debitData[i]){\r\n                debitItem = `${i + 1}, ${dayWithMonthNameHandler(debitData[i].date)},${textCurationHandler(debitData[i].description)},${debitData[i].amount}\\n`\r\n            }\r\n            else{\r\n                debitItem = `,,,,\\n`\r\n            }\r\n\r\n            csvString += creditItem + debitItem;\r\n        }\r\n        console.log(\"csvString: \", csvString);\r\n\r\n        const blob = new Blob([csvString], {type: 'text/csv'});\r\n        let url = window.URL.createObjectURL(blob);\r\n        console.log(\"url is: \", url);\r\n        console.log(\"blob is: \", blob);\r\n        const a = document.createElement('a');\r\n        a.setAttribute('hidden', '');\r\n        a.setAttribute('href', url);\r\n        a.setAttribute('download', `${name}_${year}.csv`);\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n\r\n    }\r\n\r\n\r\n    const downloadPdfHandler = () =>{\r\n\r\n        const head = [\r\n            [ \"\", \"Credit\",\"\",\"\",\"\", \"Debit\", \"\"],\r\n            [ \"Date\", \"Description\", \"Amount\", \"\",\"Date\", \"Description\", \"Amount\"]\r\n        ];\r\n\r\n        let dataBody = [];\r\n\r\n        for(let i = 0; i < (creditData.length >= debitData.length ? creditData.length : debitData.length); i++){\r\n            dataBody[i] = [];\r\n            if(creditData[i]){\r\n                console.log('creditData[i]', creditData[i]);\r\n                dataBody[i].push(`${dayWithMonthNameHandler(creditData[i].date)}`, creditData[i].description, `${creditData[i].amount}`, \"\");\r\n            }\r\n            else{\r\n                dataBody[i].push(\"\",\"\",\"\",\"\");\r\n            }\r\n\r\n            if(debitData[i]){\r\n                console.log('debitData[i]', debitData[i]);\r\n                dataBody[i].push( `${dayWithMonthNameHandler(debitData[i].date)}`, debitData[i].description, `${debitData[i].amount}`, \"\");\r\n            }\r\n            else{\r\n                dataBody[i].push(\"\",\"\",\"\",\"\");\r\n            }\r\n        }\r\n\r\n        let doc = new jsPDF('l', 'mm', \"a4\");\r\n        doc.text(`${name.toUpperCase()}_${year}`, 120, 10);\r\n        \r\n        doc.autoTable({\r\n            head: head,\r\n            body: dataBody,\r\n            theme: \"grid\",\r\n            headStyles: { fontStyle: 'bold', fontSize: 12, fillColor: \"#5e5959\" },\r\n            columnStyles: {\r\n                0: {cellWidth: 20},\r\n                1: {cellWidth: 90},\r\n                2: {cellWidth: 20},\r\n                3: {cellWidth: 1},\r\n                4: {cellWidth: 20},\r\n                5: {cellWidth: 90},\r\n                6: {cellWidth: 20},\r\n              }\r\n          });\r\n          \r\n          doc.save(`${name}_${year}.pdf`);\r\n    }\r\n\r\n    const downloadCsvHandler1 = (creditData, debitData) =>{ // unused function to create .xlsx file. Use exceljs library instead of json-as-xlsx\r\n        // let xlsx = require('json-as-xlsx')\r\n        let content = [];\r\n        console.log(\"initial data is: \", creditData, debitData);\r\n        let debitData1 = debitData.map((item,index) =>{\r\n                            let item1 = {...item};\r\n                            for(const key of Object.keys(item)){\r\n                                item1[`${key + '1'}`] = item1[key];\r\n                                delete item1[key];\r\n                            }\r\n                            item1[\"index1\"] = index + 1;\r\n                            return item1;\r\n                        });\r\n\r\n        console.log(\"dataData1: \", debitData1);    \r\n\r\n        for(let i = 0; i < (creditData.length >= debitData1.length ? creditData.length : debitData1.length); i++){\r\n            if(creditData[i]){\r\n                content[i] = creditData[i];\r\n                content[i][\"index\"] = i + 1;\r\n            }\r\n            else{\r\n                content[i] = {index:\"\", date: \"\", description: \"\", amount: \"\"};\r\n            }\r\n\r\n            if(debitData1[i]){\r\n                \r\n                content[i] = {...content[i], ...debitData1[i]};\r\n            }\r\n            else{\r\n                content[i] = {...content[i], ...{index1:\"\", date1: \"\", description1: \"\", amount1: \"\"} };\r\n            }\r\n        }\r\n\r\n        // console.log(\"content: \", content);str.replace(/(.{5})/g,\"$1\\n \");\r\n\r\n        content.unshift({ 'index':'S.No.', 'date':'Date', 'description':'Description', 'amount': 'Amount', 'index1':'S.No.', 'date1':'Date', 'description1':'Description', 'amount1': 'Amount' });\r\n        content.unshift({ 'index':' ', 'date':' ', 'description':'Credit', 'amount': ' ', 'index1':' ', 'date1':' ', 'description1':'Debit', 'amount1': ' ' });\r\n        let data = [\r\n        {\r\n            sheet: `${name.toUpperCase()} ${year}`,\r\n            columns: [\r\n                { label: ' ', value: 'index' }, // Top level data\r\n                { label: '   ', value: 'date' }, // Run functions\r\n                { label: '    ', value: 'description' }, \r\n                { label: '     ', value: 'amount' }, \r\n                { label: 'Name. ', value: 'index1' }, \r\n                { label: '      ', value: 'date1' }, \r\n                { label: '       ', value: 'description1' }, \r\n                { label: '        ', value: 'amount1' }, \r\n            ],\r\n\r\n            // columns: [\r\n            //     { label: 'S.No.', value: 'index' }, // Top level data\r\n            //     { label: 'Date', value: row => ( dayWithMonthNameHandler(row.date)) }, // Run functions\r\n            //     { label: 'Description', value: 'description' }, \r\n            //     { label: 'Amount', value: 'amount' }, \r\n            //     { label: 'S.No. ', value: 'index1' }, \r\n            //     { label: 'Date ', value: row => ( dayWithMonthNameHandler(row.date1)) }, \r\n            //     { label: 'Description ', value: 'description1' }, \r\n            //     { label: 'Amount ', value: 'amount1' }, \r\n            // ],\r\n            content: content\r\n        }\r\n        ]\r\n\r\n        let settings = {\r\n        fileName: `${name}_${year}`, // Name of the spreadsheet\r\n        extraLength: 0, // A bigger number means that columns will be wider\r\n        writeOptions: {alignment: \"wrapText\"} // Style options from https://github.com/SheetJS/sheetjs#writing-options\r\n        }\r\n\r\n        xlsx(data, settings) // Will download the excel file\r\n    }\r\n\r\n    return(\r\n        <Button onClick={downloadFileHandler} variant = {`${extension === 'csv' ? 'primary' : 'dark'}`} >\r\n            {`Download as ${extension.toUpperCase()}`}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default GenerateFile;","import React, { useEffect, useState, useCallback, useRef } from 'react';\r\nimport styles from './TableYear.module.css';\r\nimport axios from '../../axios';\r\nimport AddButton from '../../UI/AddButton/AddButton';\r\nimport EditButton from '../../UI/EditButton/EditButton';\r\nimport DeleteButton from '../../UI/DeleteButton/DeleteButton';\r\nimport GenerateFile from '../GenerateFile/GenerateFile';\r\n// import GeneratePdf from '../FileGenerators/GeneratePdf/GeneratePdf';\r\nimport WithLoadingInfo from '../../HOC/WithLoadingInfo/WithLoadingInfo';\r\nimport { dayWithMonthNameHandler } from '../../utils';\r\nimport { Container, \r\n         Row, \r\n         Col,\r\n         Table,\r\n        } from 'react-bootstrap';\r\n\r\nconst TableYear = (props) => {\r\n    \r\n    const [ data, setData ] = useState([]);\r\n    const [ creditFileData, setCreditFileData ] = useState([]);\r\n    const [ debitFileData, setDebitFileData ] = useState([]);\r\n    const [ creditTableRow, setCreditTableRow ] = useState(null);\r\n    const [ debitTableRow, setDebitTableRow ] = useState(null);\r\n    const [ creditSum, setCreditSum ] = useState(0);\r\n    const [ debitSum, setDebitSum ] = useState(0);\r\n    const [ noData, setNoData ] = useState(false);\r\n\r\n    const { setShowLoader, setMsg, setSuccess, showLoader, success, setDeletedYear } = props;\r\n\r\n    let { year, name } = props.formData;\r\n    const refContainer = useRef();\r\n    \r\n    const updateTableHandler = useCallback((id, op, item ) =>{\r\n        let temp = [];\r\n        console.log(\"data updated1\");\r\n        switch(op){\r\n            case 'del':\r\n                console.log(\"data updated2\");\r\n                temp = data.filter((element, index) => element.id !== id );\r\n                if(!temp.length){\r\n                    console.log(\"test del\");\r\n                    if(props.dataAll){\r\n                        setDeletedYear(year);\r\n                        return;\r\n                    }\r\n                    else{\r\n                        setNoData(true);\r\n                    }\r\n                }\r\n                setMsg(\"Deletion successful !\");\r\n                setSuccess(true);\r\n                console.log(\"data updated3\");\r\n                break;\r\n\r\n            case 'edit':\r\n                temp = data;\r\n                temp[temp.findIndex((element)=> element.id === id)] = item;\r\n                break;\r\n\r\n            case 'add':\r\n                temp = data;\r\n                temp.push(item);\r\n                if(temp.length === 1 && noData ){\r\n                    setNoData(false);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        console.log(\"culprit temp is: \", temp);\r\n        setData(temp);\r\n\r\n    }, [data, noData, props.dataAll, setMsg, setSuccess, setDeletedYear, year ]);\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        const getDataHandler = () => {\r\n\r\n            console.log(\"updateTableHandler hit\");\r\n            setShowLoader(true);\r\n            axios.get('/api/items', { params: { name: name, year: year } }) \r\n            .then(res => {\r\n                setShowLoader(false);\r\n                console.log(\"table result: \", res);\r\n                if(Array.isArray(res.data)){\r\n                    if(res.data.length){\r\n                        if(noData){\r\n                            setNoData(false);\r\n                        }\r\n                        console.log(\"table updated\");\r\n                        setData(res.data[0].entries);\r\n                    }\r\n                    else{\r\n                        setNoData(true);\r\n                    }\r\n                }\r\n                \r\n                else if(res.data.message){\r\n                    setMsg(\"Could not load data. Please check your network connection\"); // connection error from backend\r\n                    console.log(\"error in then is: \", res.data.message, year);\r\n                    setSuccess(false);\r\n                }\r\n            })\r\n            .catch(err =>{ \r\n                setShowLoader(false);\r\n                setMsg(\"Could not load data. Please check your network connection\"); // axios timeout exceeded\r\n                console.log(\"error in catch is: \", err, year);\r\n                setSuccess(false);\r\n            })\r\n            // .finally(() => {\r\n            //     setShowLoader(false);\r\n            // });\r\n        }\r\n\r\n        if(props.dataAll){\r\n            console.log(\"dataAll given\");\r\n            setData(props.dataAll);\r\n            return;\r\n        }\r\n\r\n        getDataHandler();\r\n       \r\n    },[props.formData, props.dataAll, name, setMsg, setShowLoader, setSuccess, year, noData ]) \r\n\r\n    useEffect(() => {\r\n        let inFileData = [];\r\n        let outFileData = [];\r\n        console.log(\"second effect\");\r\n        let i = 0;\r\n        let j = 0;\r\n        let creditSum = 0;\r\n        let debitSum = 0;\r\n        console.log(\"culprit data: \", data);\r\n        let creditData = data.map((item, index) =>{\r\n                                console.log(\"item: \", item)\r\n                                if(item.direction === 'credit'){\r\n                                    i += 1;\r\n                                    inFileData.push(item);\r\n                                    creditSum += item.amount;\r\n                                    item.year = year;\r\n                                    item.name = name;\r\n                                    return (\r\n                                                <tr key = {index} >\r\n                                                    <td>{ i }</td>\r\n                                                    <td className={styles.date} >{ !item.noDate ? dayWithMonthNameHandler(item.date) : null  }</td>\r\n                                                    <td className={styles.description} >{ item.description }</td>\r\n                                                    <td>{ item.amount }</td>\r\n                                                    <td className={styles.actions} > \r\n                                                        <EditButton formData = {item} \r\n                                                                    toUpdate={ item.id }\r\n                                                                    showLoader={ showLoader }\r\n                                                                    setShowLoader={setShowLoader}\r\n                                                                    setMsg={setMsg}\r\n                                                                    setSuccess={setSuccess}\r\n                                                                    success={success}\r\n                                                                    updateTableHandler={updateTableHandler} />\r\n\r\n                                                        <DeleteButton   formData = {item} \r\n                                                                        toUpdate={ item.id }\r\n                                                                        showLoader={ showLoader }\r\n                                                                        setShowLoader={setShowLoader}\r\n                                                                        setMsg={setMsg}\r\n                                                                        setSuccess={setSuccess}\r\n                                                                        updateTableHandler={updateTableHandler} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                }\r\n                                return null; \r\n                                \r\n                            });\r\n\r\n        let debitData = data.map((item, index) =>{\r\n                                console.log(\"item: \", item)\r\n                                if(item.direction === 'debit'){\r\n                                    j += 1;\r\n                                    outFileData.push(item);\r\n                                    debitSum += item.amount;\r\n                                    item.year = year;\r\n                                    item.name = name;\r\n                                    return (\r\n                                                <tr key = {index} >\r\n                                                    <td>{ j }</td>\r\n                                                    <td>{ !item.noDate ? dayWithMonthNameHandler(item.date) : null }</td>\r\n                                                    <td className={styles.description} >{ item.description }</td>\r\n                                                    <td>{ item.amount }</td>\r\n                                                    <td className={styles.actions} > \r\n                                                        <EditButton formData = {item} \r\n                                                                    toUpdate={ item.id }\r\n                                                                    showLoader={ showLoader }\r\n                                                                    setShowLoader={setShowLoader}\r\n                                                                    setMsg={setMsg}\r\n                                                                    setSuccess={setSuccess}\r\n                                                                    success={success}\r\n                                                                    updateTableHandler={updateTableHandler} />\r\n                                                                    \r\n                                                        <DeleteButton   formData = {item} \r\n                                                                        toUpdate={ item.id }\r\n                                                                        showLoader={ showLoader }\r\n                                                                        setShowLoader={setShowLoader}\r\n                                                                        setMsg={setMsg}\r\n                                                                        setSuccess={setSuccess}\r\n                                                                        updateTableHandler={updateTableHandler} />\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )\r\n                                }\r\n                                return null;\r\n                                \r\n                            });\r\n\r\n        setCreditTableRow(creditData);\r\n        setDebitTableRow(debitData);\r\n        setCreditFileData(inFileData);\r\n        setDebitFileData(outFileData);\r\n        setCreditSum(creditSum);\r\n        setDebitSum(debitSum);\r\n\r\n    }, [data, name, year, updateTableHandler, noData, setMsg, setShowLoader, setSuccess, showLoader, success ]);\r\n\r\n    return( data.length || (noData && !props.dataAll) ?\r\n        <Container fluid className=\"bg-light\" ref={refContainer} id=\"printable\" >\r\n            {/* {\r\n              data.length || (noData && !props.dataAll) ? */}\r\n                <Row className=\"pt-5 ps-5 pe-5  col-lg-11\"  >\r\n                    <Col className={styles.year} >{ year }</Col>    \r\n                 </Row> \r\n            {/* } */}\r\n            \r\n            { noData ? \r\n                <Row className=\"pt-5 ps-5 pe-5  col-lg-11\"  >\r\n                    <Col className={styles.noDataStyles} >No entries for this year.</Col>    \r\n                    {/* <Col className={styles.noDataStyles} >{`No entries for this ${props.dataAll ? 'person' : 'year'}.`}</Col>     */}\r\n                </Row> :<>\r\n            <Row  className=\"ps-5 pe-5 col-lg-11\">\r\n                <Table striped bordered hover className={styles.tableWidth} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th  colSpan=\"5\" >Credit</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Date</th>\r\n                            <th>Description</th>\r\n                            <th>Amount</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { creditTableRow }\r\n                        <tr>\r\n                            <td colSpan=\"5\" >       <AddButton     \r\n                                                            formData = {{name: name, year: year, direction: \"credit\" }} \r\n                                                            showLoader={ showLoader }\r\n                                                            setShowLoader={setShowLoader}\r\n                                                            setMsg={setMsg}\r\n                                                            setSuccess={setSuccess}\r\n                                                            success={success}\r\n                                                            updateTableHandler={updateTableHandler} />\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover  className={styles.tableWidth} >\r\n                    <thead>\r\n                        <tr  >\r\n                            <th  colSpan=\"5\" >Debit</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Date</th>\r\n                            <th>Description</th>\r\n                            <th>Amount</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { debitTableRow }\r\n                        <tr>\r\n                            <td colSpan=\"5\" >        <AddButton     \r\n                                                            formData = {{name: name, year: year, direction: \"debit\" }} \r\n                                                            showLoader={ showLoader }\r\n                                                            setShowLoader={setShowLoader}\r\n                                                            setMsg={setMsg}\r\n                                                            setSuccess={setSuccess}\r\n                                                            success={success}\r\n                                                            updateTableHandler={updateTableHandler} />\r\n                            </td>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n            </Row>\r\n\r\n            {/* <Row className=\"pt-5 ps-5 pe-5  col-lg-11\" >\r\n                <GenerateCsv \r\n                            creditData={creditFileData}\r\n                            debitData={debitFileData} />\r\n\r\n                <GeneratePdf \r\n                            creditData={creditFileData}\r\n                            debitData={debitFileData} />\r\n            </Row> */}\r\n\r\n            <Row className=\"pt-5 ps-5 pe-5  col-lg-11\"  >\r\n                <Table striped bordered hover className={styles.tableWidth} >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Total Credit</th>\r\n                            <th>Total Debit</th>\r\n                            <th>Difference (I - O)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{ creditSum }</td>\r\n                            <td>{ debitSum }</td>\r\n                            <td>{ creditSum - debitSum }</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </Row>\r\n            <Table  className={styles.tableWidth} >\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <GenerateFile \r\n                                name={name}\r\n                                year={year}\r\n                                extension={'csv'}\r\n                                creditData={creditFileData}\r\n                                debitData={debitFileData} />\r\n                        </th>\r\n                        <th>\r\n                            <GenerateFile\r\n                                name={name}\r\n                                year={year}\r\n                                extension={'pdf'}\r\n                                refContainer={refContainer}\r\n                                creditData={creditFileData}\r\n                                debitData={debitFileData} />\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n            </Table>\r\n             </> }\r\n            \r\n        </Container> : null\r\n    );\r\n}\r\n\r\nexport default WithLoadingInfo(React.memo(TableYear));","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Controls from './Components/Controls/Controls';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport TableYear from './Components/TableYear/TableYear';\r\nimport WithLoadingInfo from './HOC/WithLoadingInfo/WithLoadingInfo';\r\nimport axios from './axios';\r\nimport { \r\n        Row, \r\n        Col,\r\n      } from 'react-bootstrap';\r\n\r\nfunction App(props) {\r\n\r\n  console.log(\"app hit\");\r\n  const [ formData, setFormData ] = useState( { name:\"\", year: \"\" } );\r\n  const [ dataAll, setDataAll ] = useState([]);\r\n  const [ noData, setNoData ] = useState(false);\r\n  const [deletedYear, setDeletedYear] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n  // const preventRefire = useRef(false);\r\n\r\n  const { setShowLoader, setMsg, setSuccess, showLoader } = props;\r\n  \r\n  useEffect(() =>{\r\n\r\n    const getAllDataHandler = (name, year) =>{\r\n      console.log(\"getalldata hit\");\r\n      setDeletedYear(\"\");\r\n      setShowLoader(true);\r\n  \r\n      axios.get('/api/items', { params: { name: name, year: year } })\r\n             .then((res) =>{\r\n               console.log(\"response is: \", res.data, name, year);\r\n               if(Array.isArray(res.data)){\r\n                 let arrangedData = res.data;\r\n                  if(arrangedData.length){\r\n                      arrangedData.sort((a, b) =>{\r\n                      return -(Number(a.year.split('-')[0]) - Number(b.year.split('-')[0]));\r\n                    });\r\n                    setDataAll(arrangedData);\r\n                    if(noData){\r\n                      setNoData(false);\r\n                    }\r\n                  }\r\n                  else{\r\n                    setNoData(true);\r\n                  }\r\n                  // preventRefire.current = true;\r\n               }\r\n               else if(res.data.message){\r\n                setMsg(\"Could not load data. Please check your network connection\"); // connection error from backend\r\n                console.log(\"error in then is: \", res.data.message, year);\r\n                setSuccess(false);\r\n            }\r\n             })\r\n             .catch((err) =>{\r\n                setMsg(\"Could not load data. Please check your network connection\"); // axios timeout exceeded\r\n                console.log(\"error in catch is: \", err, year);\r\n                setSuccess(false);\r\n             })\r\n             .finally(()=>{\r\n               setShowLoader(false);\r\n             })\r\n    };\r\n\r\n    \r\n    if(formData.year === 'all'){\r\n      // if(preventRefire.current){\r\n        // console.log(\"culprit???\")\r\n        // preventRefire.current = false;\r\n        // return;\r\n      // }\r\n      let { name, year } = formData;\r\n      getAllDataHandler(name, year);\r\n    }\r\n  }, [formData, setMsg, setSuccess, setShowLoader, noData ]);\r\n\r\n  useEffect(()=>{\r\n    if(!isMounted.current){\r\n      isMounted.current = true;\r\n      return;\r\n    }\r\n    if(deletedYear){\r\n      let newData = dataAll.filter((element, index) => element.year !== deletedYear)\r\n      if(!newData.length){\r\n        console.log('culprit ???');\r\n        // setDataAll([]);\r\n        setNoData(true);\r\n      }\r\n      else{\r\n        setDataAll(newData)\r\n      }\r\n      setMsg(\"Deletion successful !\");\r\n      setSuccess(true);\r\n    }\r\n    \r\n  }, [ setMsg, setSuccess, deletedYear, dataAll]);\r\n\r\n  const stateUpdateHandler = (val) => {\r\n      console.log(\"stateupdatehandler app.js\", dataAll, noData);\r\n      setFormData(val);\r\n  }\r\n  console.log('culprit app rendered')\r\n  return (\r\n    <div className=\"App\"  >\r\n\r\n\r\n            <Controls setFormData = {stateUpdateHandler}  /> \r\n            <div className=\"nameStyle\" >{ formData.name.toUpperCase() }</div>\r\n            { formData.year === 'all' && !showLoader  ? \r\n              ! noData ?\r\n              dataAll.map((item, index) =>{\r\n                  return <TableYear key={index} formData={{...formData, year: item.year }} dataAll={item.entries} setDeletedYear={setDeletedYear} />\r\n                \r\n              })\r\n              : <Row className=\"pt-5 ps-5 pe-5  col-lg-11\"  > \r\n                  <Col className=\"noDataStyles\" >No entries for this person.</Col>    \r\n                </Row>\r\n\r\n            : formData.year && !showLoader ? <TableYear formData={ formData }  /> : null\r\n            }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WithLoadingInfo(App);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWidth\":\"TableYear_tableWidth__1hFki\",\"description\":\"TableYear_description__MFFbr\",\"actions\":\"TableYear_actions__28xMq\",\"year\":\"TableYear_year__1_sM0\",\"noDataStyles\":\"TableYear_noDataStyles__2luap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colHeight\":\"Controls_colHeight__2wz1l\",\"rowHeight\":\"Controls_rowHeight__UVIkB\",\"button\":\"Controls_button__2wP27\",\"blink\":\"Controls_blink__P_kfe\",\"validationFail\":\"Controls_validationFail__3lf5P\",\"notAllowed\":\"Controls_notAllowed__2l3Ye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonGrp\":\"AddButton_buttonGrp__2hWq7\",\"buttonCancel\":\"AddButton_buttonCancel__2nupQ\",\"popover\":\"AddButton_popover__N1Zhs\",\"validationFail\":\"AddButton_validationFail__3unDa\",\"clickable\":\"AddButton_clickable__3_dz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"EditButton_button__tL8uM\",\"buttonGrp\":\"EditButton_buttonGrp__25GgM\",\"buttonCancel\":\"EditButton_buttonCancel__2UOEF\",\"popover\":\"EditButton_popover__1_PlU\",\"validationFail\":\"EditButton_validationFail__308Le\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"DeleteButton_button__3Bw2I\",\"buttonCancel\":\"DeleteButton_buttonCancel__3EBmO\",\"popover\":\"DeleteButton_popover__1_xMj\"};"],"sourceRoot":""}